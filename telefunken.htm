<html>
  <head>
    <title> MONOSCOPIO </title>
    <meta charset='utf-8'>
  </head>
  <body>
    <canvas id="monoscopio" width="1955" >
    </canvas>
    <script>
      /* Todo: Normalizza coordinate */
      function rgbToHex(r, g, b)
      {
	return "#"+((1<<24)+(r<<16)+(g<<8)+b).toString(16).slice(1);
      }

      var c = document.getElementById ("monoscopio");
      var ct = c.getContext ("2d");
      var circle = false;
      var laterali = true;
      var croce = true;
      var time = false;
      const p = ["PM5544","PM5368","PM5644"];
      var pattern = p[0];
      const width = c.width;
      var RC = 14; /* Quante righe (dominio monoscopio) */
      var CC = 18;
      const CD = 12; /* DIAMETRO DEL CERCHIO */
      const gridW = 1;
      c.height = RC/CC * width;
      const height = c.height;
      const X = width/CC;
      const GRAYS = 5;

      /* Colori YCGRGB */
      const colori=['#bfbfbf','#BFBF00','#00BFBF','#00BF00','#BF00BF','#BF0000','#0000BF','#000000'];

      c.width = width+X;
      c.height = height+X;
      ct.lineWidth = 6;

      /* Converte il punto in funzione del centro del monoscopio */
      function Mx (offt)
      {
	return (CC/2 + offt)*X;
      }
      /* Converte il punto in funzione del centro del monoscopio */
      function My (offt)
      {
	return (RC/2 + offt)*X;
      }
      function Linea (ct, x0, y0, x1, y1)
      {
	ct.beginPath ();
	ct.moveTo (x0, y0);
	ct.lineTo (x1, y1);
	ct.stroke ();
      }
      function Cerchio (ct, x, y, r)
      {
	ct.beginPath ();
	ct.arc (x, y, r, 0, 2*Math.PI);
	ct.stroke ();
	console.log (r);
      }

      /* Cambia sistema di coordinate (dopo merlatura) */
      ct.fillStyle = "#3e3e3e"; /* COLORE GRIGLIA ESTERNA */
      ct.fillRect (0, 0, width, height);



      /* Rettangolo di disegno effettivo */
      ct.fillStyle = "#ffffff";
      ct.fillRect (Mx(-6), My(-5), 12*X, 10*X);
      /* -- GRIGLIA ESTERNA -- */
      ct.strokeStyle = "#ffffff";
      for (var i=0;i<RC+1;++i) Linea (ct, 0, X*i, width, X*i);
      for (var j=0;j<CC+1;++j) Linea (ct, X*j, 0, X*j, height);


      /* -- COLORI PRIMARI -- */
      for (var i=0;i<colori.length;++i)
      {
	ct.fillStyle = colori[i];
	ct.fillRect (Mx (-(9-(3+1.5*i))),My(-5),1.5*X, X*3);
      }

      /* -- SCALA DI GRIGI -- */
      for (var i=0;i<GRAYS;++i)
      {
	let c = Math.floor ((0xff*i*(100/(GRAYS-1)))/100);
	ct.fillStyle = rgbToHex (c,c,c);
	ct.fillRect (Mx(-(9-(3+((CD/GRAYS)*i)))),My(-2),X*CD/GRAYS, 2*X);
      }
      ct.fillStyle = "#000000";
      ct.fillRect (Mx(-6+2.4), My(0), 2.4*X*3, X)

      /* -- LINEE SINUSOIDALI -- */
      //ct.fillStyle = "#000000";
      //ct.fillRect (Mx(-6), My(0.5), X, X*2);
      //ct.fillRect (Mx(+5), My(0.5), X, X*2);
      //var dt = [5,10,15,25,30]; /* Quanti cambi in una sezione */
      //for (var i=0;i<5;++i)
      //{
	//for (var j=0;j<dt[i];++j)
	//{
	  //let w = 2*X/dt[i];
	  //let bas = Mx (-(8.5-(3.5+2*i)));
	  //let grad = ct.createLinearGradient (bas+w*j,0,bas+w*j+w,0);
	  //grad.addColorStop (0, "black");
	  //grad.addColorStop (.2, "gray");
	  //grad.addColorStop (.5, "white");
	  //grad.addColorStop (.8, "gray");
	  //grad.addColorStop (1, "black");
	  //ct.fillStyle = grad;
	  //ct.fillRect (bas + w *j, 7*X, w, 2*X);
	//}
      //}
      //ct.strokeStyle = "#ffffff";
      Linea (ct, Mx(0), My(-2), Mx(0), My(2));
      Linea (ct, Mx(-6),My(0), Mx(6), My(0));

      /* -- TRIANGOLO -- */
      let perc = new Path2D();
      perc.moveTo (Mx(0) + X/5, My(2));
      perc.lineTo (Mx(0) - X/5, My(2));
      perc.lineTo (Mx(0) - X/5, My(3));
      perc.closePath ();
      ct.fillStyle = "#000000";
      ct.fill (perc, 'evenodd');
      /* Raggio di 3Sqr(5) calcolato grazie al teorema di pitagora.
       * Raggio = Pitagora(coordinate_centro, (3;6))
       * il cerchio ha origine in 0;0 quindi il cerchio ha raggio:
       * R = Sqrt(9+36) */
      Cerchio (ct, Mx(0), My(0), 3*X*Math.sqrt(5));


      /* SFUMATURE */
      ct.fillStyle = "#5e5e5e";
      ct.fillRect (Mx(2), My (3), 4*X, 2*X);

      let grad = ct.createLinearGradient (Mx(-6),0, Mx(2),0);
      grad.addColorStop (0., "#fd0d5e");
      grad.addColorStop (.97, "black");
      ct.fillStyle = grad;
      ct.fillRect (Mx(-6), My(3), 8*X, X);

      grad = ct.createLinearGradient (Mx(-6),0, Mx(2),0);
      grad.addColorStop (0., "#5f40fe");
      grad.addColorStop (.97, "black");
      ct.fillStyle = grad;
      ct.fillRect (Mx(-6), My(4), 8*X, X);


      ct.moveTo (Mx(-6), My(-5));
      ct.lineTo (Mx(+6), My(-5));
      ct.lineTo (Mx(+6), My(5));
      ct.lineTo (Mx(-6), My(5));
      ct.closePath ();
      ct.stroke ();

    </script>
  </body>
</html>
