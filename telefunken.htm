<!DOCTYPE html>
<html>
  <head>
    <title> Telefunken </title>
    <meta charset='utf-8'>
  </head>
  <body>
    <canvas id="monoscopio" width="1764" >
      Il browser non supporta i canvas.
    </canvas>
    <script>
      /* TODO: Aggiungi molti spessori per i vari tipi di linea */
      function RgbToHtml(r, g, b)
      {
	return "#"+((1<<24)+(r<<16)+(g<<8)+b).toString(16).slice(1);
      }
      var c = document.getElementById ("monoscopio");
      var ct = c.getContext ("2d");
      const width = c.width;
      var RC = 14; /* Quante righe (dominio monoscopio) */
      var CC = 18; /* Quante colonne (dominio monoscopio) */
      var CD = 12;
      c.height = RC/CC * width;
      const height = c.height;
      const X = width/CC;
      const GRAYS = 5; /* Quanti grigi? */
      const L = 3; /* Spessore griglia esterna */
      const C = 2; /* Spessore croce centrale */

      /* Raggio di 3Sqr(5) calcolato grazie al teorema di pitagora.
       * Raggio = Pitagora(coordinate_centro, (3;6))
       * il cerchio ha origine in 0;0 quindi il cerchio ha raggio:
       * R = Sqrt(9+36) */

      const colori=['#BFBFBF','#BFBF00',
		    '#00BFBF','#00BF00',
		    '#BF00BF','#BF0000',
		    '#0000BF','#000000'];

      c.height = height;
      ct.lineWidth = L;

      /* Converte il punto in funzione del centro del monoscopio */
      function Tx (offt)
      { return (CC/2+offt)*X; }

      /* Converte il punto in funzione del centro del monoscopio */
      function Ty (offt)
      { return (RC/2+offt)*X; }

      function Linea (ct, x0, y0, x1, y1)
      {
	ct.beginPath ();
	ct.moveTo (x0, y0);
	ct.lineTo (x1, y1);
	ct.stroke ();
      }

      function Cerchio (ct, x, y, r, fill=0)
      {
	ct.beginPath ();
	ct.arc (x, y, r, 0, 2*Math.PI);
	if (!fill) ct.stroke ();
	else ct.fill ();
      }

      ct.fillStyle = "#3E3E3E"; /* COLORE GRIGLIA ESTERNA */
      ct.fillRect (0, 0, width, height);

      /* Rettangolo di disegno effettivo */
      ct.fillStyle = "#FFFFFF";
      ct.fillRect (Tx(-6), Ty(-5), CD*X, 10*X);

      /* -- GRIGLIA ESTERNA -- */
      ct.strokeStyle = "#FFFFFF";
      for (var i=0;i<RC+1;++i) Linea (ct, 0, X*i, width, X*i);
      for (var j=0;j<CC+1;++j) Linea (ct, X*j, 0, X*j, height);

      /* -- COLORI PRIMARI -- */
      for (var i=0;i<colori.length;++i)
      {
	ct.fillStyle = colori[i];
	ct.fillRect (Tx (-9+3+1.5*i),Ty(-5),1.5*X, X*3);
      }

      /* -- SCALA DI GRIGI -- */
      for (var i=0;i<GRAYS;++i)
      {
			    /*255*100*/
	let c = Math.floor ( (25500*i/(GRAYS-1))/100 );
	ct.fillStyle = RgbToHtml (c,c,c);
	ct.fillRect (Tx(-(9-(3+((CD/GRAYS)*i)))),Ty(-2),X*CD/GRAYS, 2*X);
      }

      ct.fillStyle = "#000000";
      ct.fillRect (Tx(-6+2.4), Ty(0), 2.4*X*3, X)

      /* -- TRIANGOLO -- */
      let perc = new Path2D();
      ct.fillStyle = "#000000";
      perc.moveTo (Tx(0) + 3/16*X, Ty(2)); /* Base triangolo = .375 2(3/16) */
      perc.lineTo (Tx(0) - 3/16*X, Ty(2));
      perc.lineTo (Tx(0) - 3/16*X, Ty(3));
      perc.closePath ();
      ct.fill (perc);

      /* -- LINEE SINUSOIDALI -- */
      var dt = [5,10,15]; /* Quanti cambi in una sezione? */
      var dd = [.275,.525,1.075]; /* Salti da una sezione ad un'altra */
      ct.fillStyle = "#7F7F7F";
      ct.fillRect (Tx(-6+1.5), Ty(+1), (12-1.5)*X, X);

      ct.fillStyle = "#B18000";
      ct.fillRect (Tx(2.5), Ty(+1), X*2.95, X);
      for (var i=0;i<dt.length;++i)
      {
	for (var j=0;j<dt[i];++j)
	{
	  let w = 1.85*X/dt[i];
	  let bas =  dd[i]*X + Tx (-9+4.5+1.85*i);
	  let grad = ct.createLinearGradient (bas+w*j,0,bas+w*(1+j),0);
	  grad.addColorStop (0., "gray");
	  grad.addColorStop (.4, "white");
	  grad.addColorStop (.8, "black");
	  ct.fillStyle = grad;
	  ct.fillRect (bas + w*j, Ty(1),w,X);
	}
      }

      Cerchio (ct, Tx(0), Ty(0), 3*X*Math.sqrt(5));

      /* -- SFUMATURE -- */
      ct.fillStyle = "#5E5E5E";
      ct.fillRect (Tx(2), Ty (3), 4*X, 2*X);

      let grad = ct.createLinearGradient (Tx(-6),0, Tx(2),0);
      grad.addColorStop (0., "#FD0D5E");
      grad.addColorStop (.97,"#000000");
      ct.fillStyle = grad;
      ct.fillRect (Tx(-6), Ty(3), 8*X, X);

      grad = ct.createLinearGradient (Tx(-6),0, Tx(2),0);
      grad.addColorStop (0., "#5F40FE");
      grad.addColorStop (.97,"#000000");
      ct.fillStyle = grad;
      ct.fillRect (Tx(-6), Ty(4), 8*X, X);

      /* -- RICALCA RETTANGOLO -- */
      ct.moveTo (Tx(-6), Ty(-5));
      ct.lineTo (Tx(+6), Ty(-5));
      ct.lineTo (Tx(+6), Ty(+5));
      ct.lineTo (Tx(-6), Ty(+5));
      ct.closePath ();
      ct.stroke ();

      Linea (ct, Tx(+0), Ty(-2), Tx(0), Ty(2));
      Linea (ct, Tx(-6), Ty(+0), Tx(6), Ty(0));
    </script>
  </body>
</html>
