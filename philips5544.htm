<html>
  <head>
    <title> MONOSCOPIO </title>
    <meta charset='utf-8'>
  </head>
  <body>
    <canvas id="monoscopio" width="1215.5" >
    </canvas>
    <script>
      /* Todo: Normalizza coordinate */
      function rgbToHex(r, g, b)
      {
	return "#"+((1<<24)+(r<<16)+(g<<8)+b).toString(16).slice(1);
      }

      var c = document.getElementById ("monoscopio");
      var ct = c.getContext ("2d");
      const width = c.width;
      const RC = 13; /* Quante righe (dominio monoscopio) */
      const CC = 23/* 23 */; /* Quante colonne (dominio monoscopio) */
      const gridW = 1;

      c.height = RC/CC * width;
      const height = c.height;
      const R = height/RC;
      const C = width/CC;
      const GRAYS = 6; /* Numero di grigi nella scala di grigi */

      /* Colori YCGRGB */
      const colori=['#BFBF00','#00BFBF','#00BF00','#BF00BF','#BF0000','#0000BF'];

      c.width = width + R;
      c.height = height + C;
      ct.lineWidth = 3;
      /* Converte il punto in funzione del centro del monoscopio */
      function Mx (offt, larg=1)
      {
	return ((CC/2 + offt)*C);
      }
      /* Converte il punto in funzione del centro del monoscopio */
      function My (offt, rect=1)
      {
	return (RC/2 + offt)*R;
      }
      function Linea (ct, x0, y0, x1, y1)
      {
	ct.beginPath ();
	ct.moveTo (x0, y0);
	ct.lineTo (x1, y1);
	ct.stroke ();
      }
      function Cerchio (ct, x, y, r)
      {
	ct.beginPath ();
	ct.arc (x, y, r, 0, 2*Math.PI);
	ct.fill ();
      }
      function GradH ()
      {
	var dt = [5,10,15,25,30]; /* Quanti cambi in una sezione */
	for (var i=0;i<5;++i)
	{
	  for (var j=0;j<dt[i];++j)
	  {
	    let w = (2*C)/dt[i];
	    let bas = Mx (-1 * (17/2-(3.5 + 2*i)));
	    let grad = ct.createLinearGradient (bas + w *j, 0, bas + w *j + w, 0);
	    grad.addColorStop (0, "black");
	    grad.addColorStop (.2, "gray");
	    grad.addColorStop (.5, "white");
	    grad.addColorStop (.8, "gray");
	    grad.addColorStop (1, "black");
	    ct.fillStyle = grad;
	    ct.fillRect (bas + w *j, 7*R, w, 2*R);
	  }
	}
      }
      /* -- MERLATURA -- */
      function Merlatura (ct, righe, colonne)
      {
	for (var i=0;i<colonne;++i)
	{
	  ct.fillStyle = (i%2?"#ffffff":"#000000");
	  //Mx (-1 * (17/2-(i+0.5)))
	  ct.fillRect (C*(i+.5),0,C, R/2);
	  ct.fillRect (C*(i+.5),R*13.5,C, R/2);
	}
	for (var i=0;i<righe;++i)
	{
	  ct.fillStyle = (i%2?"#ffffff":"#000000");
	  ct.fillRect (0,R*(i+.5),C/2, R);
	  ct.fillRect (Mx(CC/2+0.5),R*(i+.5),C/2, R);
	}
	ct.fillStyle = "#ffffff";
	ct.fillRect (0,0, C/2, R/2);
	ct.fillRect (Mx(CC/2+0.5),0, C/2, R/2);
	ct.fillRect (0,My(7), C/2, R/2);
	ct.fillRect (Mx(CC/2+0.5),My(7), C/2, R/2);
      }
      Merlatura (ct, RC, CC);
      /* TODO: Riguarda (for dim*2) */
      function quad (ct, stx, sty, dim, barre, sx=1)
      {
	let oldt = ct.lineWidth;
	ct.save ();
	ct.strokeStyle = "#000000";
	ct.lineWidth = 1;
	ct.beginPath();
	ct.rect (stx, sty, dim, dim);
	ct.clip();
	var thickness = dim/barre;
	ct.lineWidth =thickness;
	for (var i=0;i < dim*2;i++)
	{
	  ct.beginPath ();
	  ct.strokeStyle = (i%2)?"#ffffff":"#000000";
	  if (sx)
	  {
	    ct.moveTo(stx+i*thickness+thickness/2-dim,sty);
	    ct.lineTo(stx+i*thickness+thickness,dim+sty);
	  }
	  else
	  {
	    ct.moveTo(stx+i*thickness+thickness/2,sty);
	    ct.lineTo(stx+i*thickness+thickness-dim,dim+sty);
	  }
	  ct.stroke();
	}
	ct.restore ();
	ct.strokeStyle = "#ffffff";
	ct.beginPath ();
	ct.moveTo (stx, sty);
	ct.lineTo (stx+dim, sty);
	ct.lineTo (stx+dim, sty+dim);
	ct.lineTo (stx, sty+dim);
	ct.closePath ();
	ct.stroke ();
	ct.lineWidth = oldt;
      }


      /* Cambia coordinate */
      ct.translate (C/2, R/2);
      ct.fillStyle = "#808080";
      ct.fillRect (0, 0, width, height);


      /* -- GRIGLIA ESTERNA -- */
      ct.strokeStyle = "#ffffff";
      for (var i=0;i<RC+1;++i)
      {
	ct.beginPath ();
	ct.moveTo (0, R*i);
	ct.lineTo (width,C*i);
	ct.stroke ();
      }
      for (var j=0;j<CC+1;++j)
      {
	ct.beginPath ();
	ct.moveTo (R*j, 0);
	ct.lineTo (R*j, height);
	ct.stroke ();
      }

      /* -- BARRE LATERALI -- */
      /* TODO: Normalizza coordinate */
      ct.fillStyle = "#507ae9";
      ct.fillRect (Mx(-6.5),My(-5.5),C, 2*R);
      ct.fillStyle = "#507ae9";
      ct.fillRect (Mx(5.5),My(-5.5),C, 2*R);

      ct.fillStyle = "#a47a0c";
      ct.fillRect (Mx(-6.5),My(3.5),C,2*R);
      ct.fillStyle = "#a47a0c";
      ct.fillRect (Mx(5.5),My(3.5),C,2*R);

      ct.fillStyle = "#369D7A";
      ct.fillRect (Mx(-7.5),My(-5.5),C,R*5.5);
      ct.fillStyle = "#7a9201";
      ct.fillRect (Mx(6.5),R,R, R*5.5);

      ct.fillStyle = "#be587a";
      ct.fillRect (Mx(-7.5),My(0),C, 5.5*R);
      ct.fillStyle = "#7a63f3";
      ct.fillRect (Mx(6.5),My(0),C, 5.5*R);

      ct.strokeStyle = "#ffffff";
      ct.beginPath ();
      ct.moveTo (Mx(-7.5,0), My(-5.5,0));
      ct.lineTo (Mx(-5.5,0), My(-5.5,0));
      ct.lineTo (Mx(-5.5,0), My(-3.5,0));
      ct.lineTo (Mx(-6.5,0), My(-3.5,0));
      ct.lineTo (Mx(-6.5,0), My(3.5,0));
      ct.lineTo (Mx(-5.5,0), My(3.5,0));
      ct.lineTo (Mx(-5.5,0), My(5.5,0));
      ct.lineTo (Mx(-7.5,0), My(5.5,0));
      ct.lineTo (Mx(-7.5,0), My(-5.5,0));
      ct.stroke ();

      ct.beginPath ();
      ct.moveTo (Mx(7.5, 0), My(-5.5,0));
      ct.lineTo (Mx(5.5, 0), My(-5.5,0));
      ct.lineTo (Mx(5.5, 0), My(-3.5,0));
      ct.lineTo (Mx(6.5, 0), My(-3.5,0));
      ct.lineTo (Mx(6.5, 0), My(3.5,0));
      ct.lineTo (Mx(5.5, 0), My(3.5,0));
      ct.lineTo (Mx(5.5, 0), My(5.5,0));
      ct.lineTo (Mx(7.5, 0), My(5.5,0));
      ct.lineTo (Mx(7.5, 0), My(-5.5,0));
      ct.stroke ();


      /* CERCHIO --------------------------------------------*/

      if (CC >= 23)
      {
	ct.fillStyle = "#000000";
	Cerchio (ct, Mx(-9.5), My(-4.5), 1.5*R);
	Cerchio (ct, Mx(9.5), My(-4.5), 1.5*R);
	Cerchio (ct, Mx(9.5), My(4.5), 1.5*R);
	Cerchio (ct, Mx(-9.5), My(4.5), 1.5*R);

	quad (ct, Mx (-9.5), My (-2.5), C*2, 30);
	quad (ct, Mx (-9.5), My (0.5), C*2, 20,0);
	quad (ct, Mx (7.5), My (-2.5), C*2, 30,0);
	quad (ct, Mx (7.5), My (0.5), C*2, 20);
	ct.lineWidth = 4;
	
	ct.strokeStyle = "#ffffff";
	/* Todo: 1/4 e` una costante */
	Linea (ct, Mx(-0.5+1/4),My(-6.2),Mx(0.5-1/4), My(-6.2));
	Linea (ct, Mx(-0.5+1/4),My(-6.35),Mx(0.5-1/4), My(-6.35));
	Linea (ct, Mx(-0.5+1/4),My(6.2),Mx(0.5-1/4), My(6.2));
	Linea (ct, Mx(-0.5+1/4),My(6.35),Mx(0.5-1/4), My(6.35));

	ct.lineWidth = 6;
	ct.strokeStyle = "#ffffff";
	Linea (ct, Mx(10.75),My(-.5+1/8),Mx(10.75),My(+.5-1/8));
	Linea (ct, Mx(11),My(-.5+1/8),Mx(11),My(+.5-1/8));
	Linea (ct, Mx(11.25),My(-.5+1/8),Mx(11.25),My(+.5-1/8));
	Linea (ct, Mx(-10.75),My(-.5+1/8),Mx(-10.75),My(+.5-1/8));
	Linea (ct, Mx(-11),My(-.5+1/8),Mx(-11),My(+.5-1/8));
	Linea (ct, Mx(-11.25),My(-.5+1/8),Mx(-11.25),My(+.5-1/8));

	ct.lineWidth = 3;
      }
      ct.save ();
      ct.beginPath ();
      ct.arc (Mx(0), My(0), R*6, 0, 2 * Math.PI);
      ct.fillStyle = "#ffffff";
      ct.fill ();
      ct.moveTo (Mx(0), My(0));
      ct.arc (Mx(0), My(0), R*6, 0, 2 * Math.PI);
      ct.clip ();
      ct.fillStyle = "#ffffff";
      ct.fillRect (Mx(-6), My(-5.5), 12*C, 12*R);

      /*-- BARRA IN ALTO --*/
      ct.fillStyle = "#000000";
      ct.fillRect (Mx(-2),My(-5.5),4*C,R);
      ct.strokeStyle = "#ff00ff";
      ct.fillStyle = "#000000";
      ct.fillRect (Mx(-3),My(3.5),6*C,R);
      ct.strokeStyle = "#ff00ff";

      /* -- COLORI PRIMARI -- */
      for (var i =0; i < 6; ++i)
      {
	ct.fillStyle = colori[i];
	ct.fillRect (Mx (-1 * (17/2-(2.5+2*i))),R*4,C*2, R*2);
      }


      /* -- ONDA QUADRA -- */
      var quadl = R/1.45;
      var bas = Mx (-1 * (17/2-2.5));
      var i = 0;
      while (bas<Mx(6))
      {

	ct.fillStyle = (i%2?"#000000":"#aaaaaa");
	ct.fillRect (bas, R*3, quadl, R);
	bas += quadl;
	++i;
      }

      /* -- TIMING Y/C -- */
      ct.fillStyle = "#bfbf00";
      ct.fillRect (Mx(-6), My(4.5), C*6.5, R*2);
      ct.fillRect (Mx(.5), My(4.5), C*5.5, R*2);
      ct.fillStyle = "#bf0000";
      ct.fillRect (Mx(-0.5), My(4.5), C, R*2);

      ct.fillStyle = "#000000";
      ct.fillRect (Mx(-5), My(-4.5), C*2, R);
      ct.fillRect (Mx(3), My(-4.5), C*2, R);

      /* -- LINEE SINUSOIDI -- */
      ct.fillStyle = "#000000";
      ct.fillRect (Mx(-6), My(0.5), C, R*2);
      ct.fillRect (Mx(5), My(0.5), C, R*2);
      var dt = [5,10,15,25,30]; /* Quanti cambi in una sezione */
      for (var i=0;i<5;++i)
      {
	for (var j=0;j<dt[i];++j)
	{
	  let w = (2*C)/dt[i];
	  let bas = Mx (-1 * (17/2-(3.5 + 2*i)));
	  let grad = ct.createLinearGradient (bas + w *j, 0, bas + w *j + w, 0);
	  grad.addColorStop (0, "black");
	  grad.addColorStop (.2, "gray");
	  grad.addColorStop (.5, "white");
	  grad.addColorStop (.8, "gray");
	  grad.addColorStop (1, "black");
	  ct.fillStyle = grad;
	  ct.fillRect (bas + w *j, 7*R, w, 2*R);
	}
      }


      /* -- SCALA DI GRIGI -- */
      for (var i=0;i<GRAYS;++i)
      {
        /* Salti di +20% */
	let c = Math.floor ((0xff*i*(100/(GRAYS - 1)))/100);
	ct.fillStyle = rgbToHex (c,c,c);
	ct.fillRect (Mx (-1 * (17/2-(2.5+2*i))),R*9,C*2, R);
      }

      /* -- CENTRALE -- */
      ct.fillStyle = "#000000";
      ct.fillRect (Mx(-6), My(-0.5), 12*C, R);
      ct.fillRect (Mx(-0.5), My(-1.5), C, R);
      ct.fillRect (Mx(-0.5), My(0.5), C, R);

      ct.beginPath ();
      ct.strokeStyle = "#ffffff";
      ct.moveTo (Mx(-6), My(0));
      ct.lineTo (Mx(6), My(0));
      ct.stroke ();
      ct.beginPath ();
      ct.moveTo (Mx(0), My(-1.5));
      ct.lineTo (Mx(0), My(1.5));
      ct.stroke ();

      ct.lineWidth = gridW;
      /* -- SPILLI -- */
      ct.strokeStyle = "#ffffff";
      ct.beginPath ();
      ct.moveTo (Mx(-2.5), My(3.5));
      ct.lineTo (Mx(-2.5), My(4.5));
      ct.stroke ();
      ct.strokeStyle = "#000000";
      ct.beginPath ();
      ct.moveTo (Mx(-2.5), My(-4.5));
      ct.lineTo (Mx(-2.5), My(-3.5));
      ct.stroke ();

      /* -- GRIGLIA CENTRALE -- */
      ct.strokeStyle = "#ffffff";
      for (var i=0;i<12;++i)
      {
	ct.beginPath ();
	ct.moveTo (Mx (-1 * (17/2-(3+1*i))),6*R);
	ct.lineTo (Mx (-1 * (17/2-(3+1*i))),7*R);
	ct.stroke ();
      }
    </script>
  </body>
</html>
